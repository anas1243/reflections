When would you want to use a remote repository rather than keeping all your work
local?

    *when i finish making a new feature for example and i want to share it with others*


Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    *if someone accidentaly commit a buggy code that will negativelly affect my code
    or if i'm working on a new feature and someone make a commit that will affect by
    exicting code that i was working on it for 3 weeks XD*

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    *clones are copies of repositories into local machines --> we use this
    when we want to work on a remote project and make modifications on it.

    forks are clones but into another github repository --> we use this 
    when we want to work on a remote project but without making any modifications
    on it.

    branches are a certian number of commits that are connecting to each other 
    --> we use this to handle independent instructions and we can merge branches
    when it comes ready to be merged into the production master branch*

What is the benefit of having a copy of the last known state of the remote
stored locally?

    *conflicts will be much less than if you did it after many commits*

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    *files coping on a flash, nothing will be easier i harder! and everything
     will be easier*

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    *when working in a new feature or when you want to make a pull request to
     be viewed by someone, you don't want it to affect the master github brach.
     you need first to get the approval for your work in a separate branch then
     merge this new branch into the master branch for both master*
